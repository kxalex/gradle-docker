buildscript {
    // inspired by https://github.com/Netflix/gradle-template
    apply from: file('gradle/buildscript.gradle'), to: buildscript
}

plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.14.0'
}

apply plugin: 'groovy'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

apply from: file('gradle/idea.gradle')
apply from: file('gradle/publish.gradle')

sourceSets {
    integTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    compile 'com.google.guava:guava:30.1.1-jre'
    compile 'com.github.docker-java:docker-java:3.2.11'

    testCompile 'junit:junit-dep:4.11'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-core:3.12.4'
}

task integTest(type: Test) {
    group = 'verification'
    description = 'Runs the integration tests.'
    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath

    //reports.html.dir = file("${reporting.baseDir}/integTests")
    //reports.junitXml.destination = file("$buildDir/integTest-results")
}

// run integration tests after unit tests if both are scheduled for execution
integTest.mustRunAfter test
integTest.dependsOn publishToMavenLocal

check.dependsOn(integTest)

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

pluginBundle {
    website = 'https://github.com/kxalex/gradle-docker'
    vcsUrl = 'https://github.com/kxalex/gradle-docker.git'
    tags = ['docker', 'publish']
}

gradlePlugin {
    plugins {
        dockerPlugin {
            id = 'com.github.kxalex'
            displayName = 'gradle-docker'
            description = 'Gradle plugin to build and publish Docker images from the build script.'
            implementationClass = 'se.transmode.gradle.plugins.docker.DockerPlugin'
        }
    }
}

/* Workaround for JDK bug (https://bugs.openjdk.java.net/browse/JDK-8051012)
   regression bug in 7u65, fixed in 7u80 and 8u40
 */
compileTestGroovy.groovyOptions.forkOptions.jvmArgs = ['-noverify']
test.jvmArgs '-noverify'
integTest.jvmArgs '-noverify'


artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}
